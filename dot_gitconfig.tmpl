# Sample gitconfig
#

[hub]
        protocol = ssh

[user]
        name = "{{ .gitusername }}"
        email = "{{ .gitemail }}"

[alias]
        co = checkout
        promote = !$DOT/bin/git-promote
        wtf     = !$DOT/bin/git-wtf
        rank-contributors = !$DOT/bin/git-rank-contributors
        count   = !git shortlog -sn

[color]
	    # Use colors in Git commands that are capable of colored output when
	    # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	    ui = auto

[color "branch"]
	    current = yellow reverse
	    local = yellow
	    remote = green

[color "diff"]
		meta = yellow bold
	    frag = magenta bold # line info
	    old = red # deletions
	    new = green # additions

[color "status"]
	    added = yellow
	    changed = green
   	    untracked = cyan

[core]
        excludesfile = ~/.gitignore
        attributesfile = ~/.gitattributes
        editor = emacs
        
        # Make `git rebase` safer on macOS
	    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	    trustctime = false
	    
	    	# Speed up commands involving untracked files such as `git status`.
	    # https://git-scm.com/docs/git-update-index#_untracked_cache
	    untrackedCache = true
	    
[commit]
	    	#use template
		template = ~/.gitmessage
	    # https://help.github.com/articles/signing-commits-using-gpg/
	    gpgsign = true

[tag]
		gpgsign = true

[gpg]
		format = x509
		
[gpg "x509"]
		program = gitsign	
	
[apply]
        whitespace = nowarn

[merge]
		# Include summaries of merged commits in newly created merge commit messages
		log = true

[mergetool]
        keepBackup = false

[diff]
		# Detect copies as well as renames
		renames = copies

[difftool]
        prompt = false

[help]
        autocorrect = 1

[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to suppress warning message
        default = simple
        # Make 'git push' push relevant annotated tags when pushing branches out
        followTags = true
